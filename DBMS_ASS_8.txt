-- 1.	Write a Procedure that displays names and salaries of all Analysts recorded in the “emp” table by making use of a cursor.
create database assignment_08;
use assignment_08;

use assignment_05;
select * from emp;

delimiter $$
create procedure my_cursor_1_demo (in job_name varchar(20))
begin 
declare emp_name varchar(20);
declare e_sal int(10);
declare finished int(2) default 0;
declare curs_1 cursor for select ename,sal from emp where job=job_name;
declare continue handler for not found set finished = 1;
open curs_1;
test_loop:Loop
fetch curs_1 into emp_name,e_sal; 
	if finished = 1 then
	leave test_loop;
    else
    select emp_name,e_sal;
	end if;
    iterate test_loop;
end loop test_loop;
close curs_1;
end $$
drop procedure my_cursor_1_demo;

-- select ename,sal from emp;
call my_cursor_1_demo('Analyst');
select * from emp;
-- 2.	Write a Procedure to display top 5 employees based on highest salary and display employee number, employee name and salary using Cursor.
delimiter $$
create procedure my_cursor_2a()
begin 
declare e_id int;
declare e_name varchar(20);
declare e_sal numeric;
declare done  int default 0;
declare top_5_cursor cursor  for select  empno,ename,sal from  emp order by sal limit 5;
declare exit handler  for not  found  set done=1;
open top_5_cursor;
test_loop:loop
fetch top_5_cursor into e_id,e_name,e_sal;

	if done=1 then
	leave test_loop;
    else
    select e_id,e_name,e_sal;
	end if;
    iterate test_loop;
end  loop;
close top_5_cursor; 
end $$
call my_cursor_2a();

drop procedure my_cursor_2a;

select * from emp;
-- 3.	Write  a procedure to display the concatenated first_name and last_name from “emp” table using cursors handle the  errors with Exit handler
create table emp3(
emp_id int primary key,
fname varchar(20),
lname varchar(20),
salary int
);

insert into emp3 
values(111,"Shweta","Narote",25000),
      (107,"Shubhangi","Tarte",10000),
      (108,"Somnath","Behere",19000),
      (089,"Shreyas","Jadhav",25000),
      (110,"Snehal","Shinde",20000);
-- drop table emp3;

delimiter $$
create procedure Concat_Name()
begin
declare f_name varchar(20);
declare l_name varchar(20);
declare done int default 0;
declare Concat_Names cursor for select fname,lname from emp3;
declare exit handler for not found set done=1;
open Concat_Names ;
l1:loop
fetch Concat_Names into f_name,l_name;
if done=1 then
leave l1;
else
select concat(f_name," ",l_name);
end if;
end loop;
close Concat_Names;
end $$
call Concat_Name();
drop procedure concat_name;

select * from emp3;

delimiter $$
create procedure Concat_Name()
begin
declare f_name varchar(20);
declare l_name varchar(20);
declare done int default 0;
declare Concat_Names cursor for select fname,lname from emp3;
declare exit handler for not found set done=1;
open Concat_Names ;
l1:loop
fetch Concat_Names into f_name,l_name;
if done=1 then
leave l1;
else
select concat(f_name," ",l_name);
end if;
end loop;
close Concat_Names;
end $$

call Concat_Name();
drop procedure concat_name;

select * from emp3;
-- 4.	Write a procedure which select all the data from employee table and display the data of employee where employee name is ‘Manish’ using cursors.

delimiter $$
create procedure my_cursor_4()
begin 
declare e_id int;
declare f_name varchar(20);
declare l_name varchar(20);
declare sal int;
declare finished int default 0;
declare  show_cursor_data cursor for select * from emp3;
declare exit handler for not found set finished =1;
open show_cursor_data;
test_loop:repeat
fetch show_cursor_data into e_id,f_name,l_name,sal;
if f_name='Shweta' then
select * from emp3 where fname='Shweta';
end if;
until finished
end repeat;
close show_cursor_data;
end $$

call my_cursor_4();
-- 5.	Write a procedure which select delete the data from employee table if emp sal is less than 10000  using cursor and handle the  Sqlexception with continue handler
create table emp2(
emp_id int primary key, 
ename varchar(20), 
salary int
);
insert into emp2 
values(101,'Shweta',20000),
      (102,'Shubhangi',50000),
      (103,'shreyas',70000),
      (104,'Shrushti',30000),
      (105,'Sneha',100000);
      
delimiter $$
create procedure my_cursor_5()
begin
declare id int;
declare e_name varchar(20);
declare sal int;
declare finished int default 0;
declare del_cursor cursor for select * from emp2 where salary<100000;
declare continue handler  for not  found set finished=1;
open del_cursor;
repeat
fetch del_cursor into id,e_name,sal;
delete from emp2 where emp_id=id;
until finished
end repeat;
close del_cursor;
end $$
drop procedure my_cursor_5;

call my_cursor_5();
select * from emp2;
      